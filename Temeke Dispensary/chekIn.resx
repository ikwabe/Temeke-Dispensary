<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="nameSearchBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAxpJREFUaEPt
        WL9rFEEUvj8hf4J/QjprC7UQzeEPsNy9E0EtFNRGENNExMYrbBThVuEaa09BkaSyEnNBEYzBwn/AVDkv
        Kcb3Td5M3g6z5nZ39ryV/eAjezsz3/feztuZ2bQaNGhQHFEUtYl94ipxPY5jBeKa7/Xp9xJ3nw9QUEcQ
        GPGXCfgwoi+PWWCZfwMKYDlP4C45kXssNzvgyRFtidiArt1U8cpz1e2PVHfwTV0a7mjiGvfQpvu44/ZL
        bDazQUaLxPRTv31fB2gCPow6GRojNaAJbbapBnhKbvCd3tAb5DTsPHrlS6KameDgD1aWy1dzPfUsQgNa
        Iol1tgwLEl42JmA32fAGdGd1rJ58mqiXX3fVux97mrjGPbT5xuiSEtrwYtswIEEslbZ0fGVz/e1YDT4f
        BJ1F9EFfdzw0RQJhS4lEEyOOl881v/V+rIZb+wG+/r6nHn74re/JdtxDG/qgr2w3dF7shO3Lg8S2jbBb
        Olfe7Njgn1KZ4Ldsl0Qb+pgk3HZZSpgFti8HEmpbUVrDXVMw2Zioxx8n3jYf0XfwZdfbJvcJeHMYxUFC
        tnw6Ky+8piEJD5FAj8MoDhJaM4JZK09IwsP4wZvDKA4SGRnB7mDTaxqSOHYYP5qB8nuCEQN9hlVQenIY
        xSHFfGZVUHpyGMVBIjMuoU2ZwIjDKA4Sqf1LXO9ldJqNLCSDb2QAiWUeJULSKZ9tti8PEvvrYS4U4xt3
        ZQLhDnM0lQskaGehzFdYFuVxGl7wZPswIMGpPmiK0Ckd1H7YDxoDErd7gv6kDJAENJxPyp9sFx5uKYGl
        PurTZaNJHmDEluFB2otklEpC/1slx2zokkm/sJoIXlxXmgRmwpaTNaU1HBsRApTHDlzjHtrkOm/HUdnI
        4A1Pnb/4gC2rAZnixU7PRj5itdEvLP2NZNuJ9gV19OSSOn7m3DNtVhXIF7OBfSJPIuibYCzLaJgkTPCG
        lSdhQP44diAZHABlieF6jdp76MPdvUDZyOBnnkQIINgmiXlAk8S84L9N4tjps1vcXA/IJGoXvAGSqG3w
        DRpUjlbrD0EmWJKhipjYAAAAAElFTkSuQmCC
</value>
  </data>
</root>